
<style>
  :root {
    --addon-bg: {{ addon_bg | default: "#ffffff" }};
    --checkbox-active-color: {{ checkbox_active_color | default: "#000000" }};
    --image-size: {{ image_size | default: "50" }}px;
    --image-type: {{ image_type | default: "0" }}%;
    --title-size: {{ title_size | default: "16" }}px;
    --font-weight: {{ font_weight | default: "400" }};
    --title-color: {{ title_color | default: "#333333" }};
    --price-size: {{ price_size | default: "14" }}px;
    --price-color: {{ price_color | default: "#666666" }};
    --price-opacity: {{ price_opacity | default: "1" }};

    /* Mobile Variables */
    --image-size-mb: {{ image_size_mb | default: "40" }}px;
    --title-size-mb: {{ title_size_mb | default: "14" }}px;
    --price-size-mb: {{ price_size_mb | default: "12" }}px;
  }
</style>

{% comment %} <style>
  .product-addon-container-gm {
    display: flex;
    flex-direction: column;
    gap: 20px;
    max-width: 100%;
    background-color: {{ addon_bg }}; 
    padding: 20px;
    border-radius: 5px;
    box-sizing: border-box;
  }

  .product-addon-container-gm .product-addon-item {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .product-addon-container-gm .product-addon-item .product-addon-checkbox {
    cursor: pointer;
    accent-color: {{ checkbox_active_color }};
  }

  .product-addon-image {
    width: {{ image_size }}px;
    height: {{ image_size }}px;
    object-fit: cover;
    border-radius: {{ image_type }}%;
  }

  .product-addon-details {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .product-addon-title {
    font-size: {{ title_size }}px;
    font-weight: {{ font_weight }}; 
    color: {{ title_color }}; 
  }

  .product-addon-price {
    font-size: {{ price_size }}px;
    color: {{ price_color }}; 
    opacity: {{ price_opacity }}; 
  }

  @media only screen and (max-width: 600px) {
    .product-addon-image {
      width: {{ image_size_mb }}px;
      height: {{ image_size_mb }}px;
    }
    .product-addon-title {
      font-size: {{ title_size_mb }}px;
    }
    .product-addon-price {
      font-size: {{ price_size_mb }}px;
    }
  }
  
</style> {% endcomment %}

<div class="product-addon-container-gm">
  {% for product in product_addon %}
    {% if product != blank and product.available %}
      <div class="product-addon-item" data-product-id="{{ product.variants.first.id }}">
        <input
          style="width: {{ checkbox_size }}px !important; height: {{ checkbox_size }}px !important; min-width: {{ checkbox_size }}px !important; min-height: {{ checkbox_size }}px !important;"
          type="checkbox"
          class="product-addon-checkbox"
          id="product-addon-checkbox-{{ forloop.index }}"
          name="product-addon-checkbox-{{ forloop.index }}"
          data-product-id="{{ product.variants.first.id }}"
        >
        <img class="product-addon-image" src="{{ product.featured_image | image_url }}" alt="{{ product.title }}">
        <div class="product-addon-details">
          <span class="product-addon-title">{{ product.title | truncatewords: 4 }}</span>
          {% if product.tags contains 'free-gift' %}
            <span class="product-addon-price">{{ free_gift_info }}</span>
          {% else %}
            <span class="product-addon-price">{{ product.price | money }}</span>
          {% endif %}
        </div>
      </div>
    {% endif %}
  {% endfor %}
</div>



<script>
document.addEventListener('DOMContentLoaded', () => {
  const checkboxes = document.querySelectorAll('.product-addon-checkbox');

  checkboxes.forEach((checkbox) => {
    checkbox.addEventListener('change', () => {
      const productId = checkbox.getAttribute('data-product-id');

      if (checkbox.checked) {
        // Add the product to the cart
        fetch('/cart/add.js', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            id: productId,
            quantity: 1
          })
        })
        .then((response) => response.json())
        .then((data) => {
          console.log('Product added to cart:', data);

          // Check cart type and redirect accordingly
          const cartType = Shopify.theme.settings.cart_type; // Assuming 'cart_type' is set in theme settings
          if (cartType === 'page') {
            // Redirect to cart page
            window.location.href = routes.cart_url;
          } else {
            // Open the cart drawer for other cart types
            const cartDrawer = document.querySelector('cart-drawer');
            if (cartDrawer) {
              cartDrawer.classList.remove('is-empty');
              fetch('/cart?view=drawer')
                .then(response => response.text())
                .then(html => {
                  const tempDiv = document.createElement('div');
                  tempDiv.innerHTML = html;
                  const newDrawerContent = tempDiv.querySelector('#CartDrawer');
                  document.querySelector('#CartDrawer').innerHTML = newDrawerContent.innerHTML;
                  cartDrawer.open();
                });
            }
          }
        })
        .catch((error) => {
          console.error('Error adding product to cart:', error);
        });
      } else {
        // Handle product removal if unchecked
        fetch('/cart/change.js', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            id: productId,
            quantity: 0
          })
        })
        .then((response) => response.json())
        .then((data) => {
          console.log('Product removed from cart:', data);
        })
        .catch((error) => {
          console.error('Error removing product from cart:', error);
        });
      }
    });
  });
});
</script>