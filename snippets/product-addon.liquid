<style>
  :root {
    --addon-bg: {{ addon_bg }};
    --checkbox-active-color: {{ checkbox_active_color }};
    --image-size: {{ image_size }}px;
    --image-type: {{ image_type }}%;
    --title-size: {{ title_size }}px;
    --font-weight: {{ font_weight }};
    --title-color: {{ title_color }};
    --price-size: {{ price_size }}px;
    --price-color: {{ price_color }};
    --price-opacity: {{ price_opacity }};

    /* Mobile Variables */
    --image-size-mb: {{ image_size_mb }}px;
    --title-size-mb: {{ title_size_mb }}px;
    --price-size-mb: {{ price_size_mb }}px;
  }
</style>
{% if product.metafields.custom.product_addons %}
  <div class="product-addon-container">
    {% for product in product_addon %}
      {% if product != blank and product.available %}
        <div class="product-addon-item" data-product-id="{{ product.variants.first.id }}">
          <input style="width: {{ checkbox_size }}px !important; height: {{ checkbox_size }}px !important; min-width: {{ checkbox_size }}px !important; min-height: {{ checkbox_size }}px !important;" type="checkbox" 
            class="product-addon-checkbox" 
            id="product-addon-checkbox-{{ forloop.index }}" 
            name="product-addon-checkbox-{{ forloop.index }}" 
            data-product-id="{{ product.variants.first.id }}" >
          <img class="product-addon-image" src="{{ product.featured_image | image_url }}" alt="{{ product.title }}">
          <div class="product-addon-details">
            <span class="product-addon-title">{{ product.title | truncatewords: 4 }}</span>
            {% if product.tags contains 'free-gift' %}
              <span class="product-addon-price">{{ free_gift_info }}</span>
            {% else %}
              <span class="product-addon-price">{{ product.price | money }}</span>
            {% endif %}
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
{% endif %}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const checkboxes = document.querySelectorAll('.product-addon-checkbox');

    checkboxes.forEach((checkbox) => {
      checkbox.addEventListener('change', () => {
        const productId = checkbox.getAttribute('data-product-id');

        if (checkbox.checked) {
          // Add the product to the cart
          fetch('/cart/add.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              id: productId,
              quantity: 1
            })
          })
          .then((response) => response.json())
          .then((data) => {
            console.log('Product added to cart:', data);
            console.log(window.cart_type);
            // Check cart type and redirect accordingly
            const cartType = window.cart_type; // Assuming 'cart_type' is set in theme settings
            console.log('Cart type:', cartType);
            if (cartType === 'page') {
              // Redirect to cart page
              window.location.href = routes.cart_url;
            } else {
              // Open the cart drawer for other cart types
              const cartDrawer = document.querySelector('cart-drawer');
              if (cartDrawer) {
                cartDrawer.classList.remove('is-empty');
                fetch('/cart?view=drawer')
                  .then(response => response.text())
                  .then(html => {
                    const tempDiv = document.createElement('div');
                    tempDiv.innerHTML = html;
                    const newDrawerContent = tempDiv.querySelector('#CartDrawer');
                    document.querySelector('#CartDrawer').innerHTML = newDrawerContent.innerHTML;
                    cartDrawer.open();
                  });
              }
            }
          })
          .catch((error) => {
            console.error('Error adding product to cart:', error);
          });
        } else {
          // Handle product removal if unchecked
          fetch('/cart/change.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              id: productId,
              quantity: 0
            })
          })
          .then((response) => response.json())
          .then((data) => {
            console.log('Product removed from cart:', data);
          })
          .catch((error) => {
            console.error('Error removing product from cart:', error);
          });
        }
      });
    });
  });
</script>