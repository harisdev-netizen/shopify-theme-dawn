{% comment %}
{
  "name": "Images 1",
  "version": "1.0.0",
  "url": "https://themepack.co/section/images-1",
  "author": "Themepack",
  "license": "MIT"
}
{% endcomment %}

{%- liquid
  assign heading_tag = 'h2'

  if section.index0 == 0
    assign heading_tag = 'h1'
  endif
-%}

{%- capture html_id -%}
  {%- if section.settings.html_id != blank -%}
    id="{{ section.settings.html_id | handleize }}"
  {%- endif -%}
{%- endcapture -%}


{% stylesheet %}
  .tp-images-1 * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  .tp-images-1 .tp__container {
    max-width: calc(var(--tp-section-width, 1440px) + 40px);
    padding-block: var(--tp-padding-block, 40px 50px);
    padding-inline: 20px;
    width: 100%;
    margin: 0 auto;
  }

  .tp-images-1 .tp__margin-left { margin-left: 0 auto; }
  .tp-images-1 .tp__margin-right { margin-right: auto 0; }
  .tp-images-1 .tp__margin-center { margin-inline: auto; }

  .tp-images-1 .tp__filter--grayscale { filter: grayscale(100%); }
  .tp-images-1 .tp__filter--sepia { filter: sepia(100%) contrast(1.2); }
  .tp-images-1 .tp__filter--invert { filter: invert(100%); }

  .tp-images-1 .tp__heading {
    font-weight: var(--tp-font-weight, 700);
    text-align: var(--tp-heading-alignment, center);
    font-size: var(--tp-font-size, 52px);
    max-width: var(--tp-heading-width, 500px);
    color: var(--tp-heading-color, #3D3D3D);
    margin-bottom: var(--tp-gap, 20px);
    width: 100%;
  }

  .tp-images-1 .tp__heading a { color: inherit; }

  .tp-images-1 .tp__items-wrapper {
    flex-wrap: var(--tp-flex-wrap, nowrap);
    gap: var(--tp-item-gap, 10px);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .tp-images-1 .tp__item {
    width: calc((100% - (var(--tp-item-gap) * (var(--tp-items-per-row) - 1))) / var(--tp-items-per-row));
    border-radius: var(--tp-image-border-radius, 10px);
    background-color: #F5F5F5FF;
    display: flex;
    justify-content: center;
    overflow: hidden;
  }
  
  .tp-images-1 .tp__item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: transform 0.3s ease-in-out;
  }

  .tp-images-1 a.tp__item:hover img {
    transform: scale(1.1);
  }

  .tp-images-1 .tp__item:nth-child(1) {
    height: var(--tp-item-1-height, 520px);
  }

  .tp-images-1 .tp__item:nth-child(2) {
    height: var(--tp-item-2-height, 365px);
  }

  .tp-images-1 .tp__item:nth-child(3) {
    height: var(--tp-item-3-height, 405px);
  }

  .tp-images-1 .tp__item:nth-child(4) {
    height: var(--tp-item-4-height, 320px);
  }

  .tp-images-1 .tp__item:nth-child(5) {
    height: var(--tp-item-5-height, 520px);
  }

  .tp-images-1 .tp__item:nth-child(6) {
    height: var(--tp-item-6-height, 405px);
  }
{% endstylesheet %}

<style>
  #tp-{{ section.id }} {
    --tp-background-color: {{ section.settings.background_gradient | default: section.settings.background_color }};
    --tp-padding-block: {{ section.settings.mobile_top_padding }}px {{ section.settings.mobile_bottom_padding }}px;
    --tp-section-width: {{ section.settings.section_max_width }}px;
    --tp-font-size: {{ section.settings.mobile_font_size }}px;
    --tp-font-weight: {{ section.settings.mobile_header_font_weight }};
    --tp-heading-color: {{ section.settings.heading_color }};
    --tp-heading-width: {{ section.settings.header_width }}px;
    --tp-heading-alignment: {{ section.settings.header_alignment }};
    --tp-gap: {{ section.settings.gap }}px;
    --tp-item-gap: {{ section.settings.mobile_item_gap }}px;
    --tp-mobile-items-per-row: {{ section.settings.mobile_items_per_row }};
    --tp-image-border-radius: {{ section.settings.image_border_radius }}px;
    --tp-image-position: {{ section.settings.mobile_image_position }};
    --tp-items-per-row: 2;
    --tp-flex-wrap: wrap;

    --tp-item-1-height: 300px;
    --tp-item-2-height: 300px;
    --tp-item-3-height: 300px;
    --tp-item-4-height: 300px;
    --tp-item-5-height: 300px;
    --tp-item-6-height: 300px;

    background: var(--tp-background-color, #FFFFFF);
  }

  @media (min-width: 991px) {
    #tp-{{ section.id }} {
      --tp-padding-block: {{ section.settings.desktop_top_padding }}px {{ section.settings.desktop_bottom_padding }}px;
      --tp-font-size: {{ section.settings.desktop_font_size }}px;
      --tp-font-weight: {{ section.settings.header_font_weight }};
      --tp-image-position: {{ section.settings.desktop_image_position }};
      --tp-item-gap: {{ section.settings.desktop_item_gap }}px;
      --tp-items-per-row: 6;
      --tp-flex-wrap: nowrap;
  
      --tp-item-1-height: 520px;
      --tp-item-2-height: 365px;
      --tp-item-3-height: 405px;
      --tp-item-4-height: 320px;
      --tp-item-5-height: 520px;
      --tp-item-6-height: 405px;
    }
  }
</style>

<div id="tp-{{ section.id }}" class="tp-{{ section.id }}">
  <div {{ html_id }} class="tp__container">
    <{{ heading_tag }} class="tp__heading tp__margin-{{ section.settings.header_alignment }}">{{ section.settings.heading_text }}</{{ heading_tag }}>

    <div class="tp__items-wrapper">
      {% for block in section.blocks %}
        {% if block.settings.link != blank %}
          <a href="{{ block.settings.link }}" target="_blank" class="tp__item">
        {% else %}
            <div class="tp__item">
        {% endif %}

         {% if block.settings.image != blank %}
          {% assign image_filter = ' tp__filter--' | append: block.settings.image_filter %}

          {{ block.settings.image | image_url: width: block.settings.image.width | image_tag: loading: 'lazy', class: image_filter }}
         {% else %}
          {{ 'image' | placeholder_svg_tag: 'tp__placeholder-image' }}
         {% endif %}

        {% if block.settings.link != blank %}
          </a>
        {% else %}
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "TP - Images 1",
  "class": "tp-section tp-images-1",
  "tag": "section",
  "max_blocks": 6,
  "settings": [
    {
      "type": "header",
      "content": "Section Information",
      "info": "Codename: tp-images-1. For detailed documentation and best practices on using this section, please visit the [Section Guide](https://themepack.co/section/images-1)"
    },
    {
      "type": "header",
      "content": "Heading"
    },
    {
      "type": "inline_richtext",
      "id": "heading_text",
      "label": "Text",
      "default": "Your title here"
    },
    {
      "type": "number",
      "id": "header_width",
      "label": "Width (px)",
      "default": 500
    },
    {
      "type": "text_alignment",
      "id": "header_alignment",
      "label": "Alignment",
      "default": "center"
    },
    {
      "type": "number",
      "id": "desktop_font_size",
      "label": "Desktop: text size (px)",
      "default": 52
    },
    {
      "type": "number",
      "id": "mobile_font_size",
      "label": "Mobile: text size (px)",
      "default": 28
    },
    {
      "type": "select",
      "id": "header_font_weight",
      "label": "Text weight",
      "options": [
        { "value": "100", "label": "Thin" },
        { "value": "200", "label": "Extra light" },
        { "value": "300", "label": "Light" },
        { "value": "400", "label": "Regular" },
        { "value": "500", "label": "Medium" },
        { "value": "600", "label": "Semi bold" },
        { "value": "700", "label": "Bold" },
        { "value": "800", "label": "Extra bold" },
        { "value": "900", "label": "Black" }
      ],
      "default": "700"
    },
    {
      "type": "header",
      "content": "Design"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#FFFFFF"
    },
    {
      "type": "color_background",
      "id": "background_gradient",
      "label": "Background gradient",
      "info": "If set, this will override the background color."
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#3D3D3D"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "number",
      "id": "section_max_width",
      "label": "Section width (px)",
      "default": 1440
    },
    {
      "type": "range",
      "id": "gap",
      "label": "Space between title & images",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 20
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "label": "Image border radius",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 10
    },
    {
      "type": "range",
      "id": "desktop_item_gap",
      "label": "Desktop: Space between images",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 10
    },
    {
      "type": "range",
      "id": "mobile_item_gap",
      "label": "Mobile: Space between images",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 10
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "desktop_top_padding",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Desktop: top padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "desktop_bottom_padding",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Desktop: bottom padding",
      "default": 50
    },
    {
      "type": "range",
      "id": "mobile_top_padding",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Mobile: top padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "mobile_bottom_padding",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Mobile: bottom padding",
      "default": 40
    },
    {
      "type": "header",
      "content": "Advanced"
    },
    {
      "type": "text",
      "id": "html_id",
      "label": "HTML ID",
      "info": "Unique identifier for linking directly to this section. Leave blank if unsure."
    },
    {
      "type": "text",
      "id": "html_class",
      "label": "HTML Class",
      "info": "Comma-separated list of classes."
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link",
          "info": "Add a URL to make the image clickable. Leave blank to keep the image static."
        },
        {
          "type": "select",
          "id": "image_filter",
          "label": "Image filter",
          "options": [
            { "value": "none", "label": "None" },
            { "value": "grayscale", "label": "Grayscale" },
            { "value": "sepia", "label": "Sepia" },
            { "value": "invert", "label": "Invert" }
          ],
          "default": "none"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "TP - Images 1",
      "blocks": [
        { "type": "image" },
        { "type": "image" },
        { "type": "image" },
        { "type": "image" },
        { "type": "image" },
        { "type": "image" }
      ]
    }
  ]
}
{% endschema %}