{%- liquid
  assign open = section.settings.open
  assign title = section.settings.title
  assign title_align = section.settings.title_align
  assign title_margin = section.settings.title_margin
  assign section_width = section.settings.section_width
  assign section_bg = section.settings.section_bg
  assign inner_bg = section.settings.inner_bg
  assign border_color = section.settings.border_color
  assign border_radius_inner = section.settings.border_radius_inner
  assign btn_bg = section.settings.btn_bg
  assign activebtn_fontcolor = section.settings.activebtn_fontcolor
  assign answer_bg = section.settings.answer_bg
  assign answer_text = section.settings.answer_text
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign text_icon_color = section.settings.text_icon_color
  assign tfont = section.settings.tfont
  assign qfont = section.settings.qfont
  assign afont = section.settings.afont
  assign title_size = section.settings.title_size
  assign title_size_mb = section.settings.title_size_mb
  assign question_size = section.settings.question_size
  assign question_size_mb = section.settings.question_size_mb
  assign answer_size = section.settings.answer_size
  assign answer_size_mb = section.settings.answer_size_mb
  assign icon_size = section.settings.icon_size
  assign icon_size_mb = section.settings.icon_size_mb
  assign icon_width = section.settings.icon_width
  assign icon_width_mb = section.settings.icon_width_mb

  assign accordion_open = section.settings.open_default
  if accordion_open == true
    assign accordionOpen = 1
  else
    assign accordionOpen = 'null'
  endif
-%}

<style>
{{ tfont | font_face }}
{{ qfont | font_face }}
{{ afont | font_face }}
  .accordion-main-container-{{ section.id }} {
    width: 100%;
    background-color: {{ section_bg }};
    padding: {{ padding_top }}px 0 {{ padding_bottom }}px;
    margin: 0 auto;
  }
  
  .accordion-container-{{ section.id }} {
    width: {{ section_width }}%;
    background-color: {{ inner_bg }};
    margin: 0 auto;
    padding: 50px 30px;
    border-radius: {{ border_radius_inner }}px;
}
  
.accordion-main-container-{{ section.id }} .accordion-container-{{ section.id }} h2 {
  color: {{ text_icon_color }};
  text-align: {{ title_align }};
  font-family: {{ tfont.family }}, {{ tfont.fallback_families }};
  font-size: {{ title_size }}rem;
  margin-bottom: {{ title_margin }}rem;
  padding: 0 20px;
}
.accordion-container-{{ section.id }} .single-accordion button{
  color: {{ text_icon_color }};
}
  
.accordion-container-{{ section.id }} .single-accordion button {
    display: block;
    width: 100%;
    position: relative;
    padding: 20px 10px;
    background-color: transparent;
    border: none;
    cursor: pointer;
}

/* .accordion-container-{{ section.id }} .single-accordion:not(:first-child) {
    border-top: 1px solid #cacaca !important;
} */

.accordion-container-{{ section.id }} .single-accordion {
    border-bottom: 1px solid {{ border_color }} !important;
}

 .accordion-container-{{ section.id }} .single-accordion button span.accordion-button-text {
    display: inline-block;
    font-family: {{ qfont.family }}, {{ qfont.fallback_families }};
    font-size: {{ question_size }}rem;
    text-align: left;
    width: 95% !important;
    line-height: 1.5;
  }

.single-accordion button svg {
    height: {{ icon_size }}rem;
    stroke-width: {{ icon_width }}px;
    position: absolute;
    right: 5%;
    top: 50%;
    transform: translateY(-50%);
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    -o-transform: translateY(-50%);
}

.answer-content {
    max-height: 0;
    overflow: hidden;
    transition: all .5s ease;
    -webkit-transition: all .5s esae;
    -moz-transition: all .5s esae;
    -ms-transition: all .5s esae;
    -o-transition: all .5s esae;
}

.answer-content p {
    padding: 20px 30px;
    font-size: 16px;
    font-family: {{ afont.family }}, {{ afont.fallback_families }};
    font-size: {{ answer_size }}rem;
}

.show {
    display: inline-block;
}

.hide {
    display: none;
}

.active-button {
    background-color: {{ btn_bg }} !important;
    color: {{ activebtn_fontcolor }} !important;
    transition: all .3s ease;
    -webkit-transition: all .3s ease;
    -moz-transition: all .3s ease;
    -ms-transition: all .3s ease;
    -o-transition: all .3s ease;
}

.active-answer {
    background-color: {{ answer_bg }} !important;
    color: {{ answer_text }} !important;
}

@media only screen and (max-width: 800px){
    .accordion-container-{{ section.id }} {
        width: 100%;    
       padding: 30px 10px 50px;
    }  
  .accordion-main-container-{{ section.id }} .accordion-container-{{ section.id }} h2{
    font-size: {{ title_size_mb }}rem;
  }
  .accordion-container-{{ section.id }} .single-accordion button span.accordion-button-text {
    font-size: {{ question_size_mb }}rem;
    width: 90% !important;
  }
  .single-accordion button svg {
    height: {{ icon_size_mb }}rem;
    stroke-width: {{ icon_width_mb }}px;
    right: 2%;
  }
  .answer-content p {
    font-size: {{ answer_size_mb }}rem;
  }
}
</style>

{% comment %} <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script> {% endcomment %}

<section class="accordion-main-container-{{ section.id }}">
  <div class="accordion-container-{{ section.id }}" x-data="{ accordionOpen: {{ accordionOpen }} }">
    {% if title != blank %}
      <h2>{{ title }}</h2>
    {% endif %}
    {% for block in section.blocks %}
        <div class="single-accordion">
          <button @click="accordionOpen = (accordionOpen === {{ forloop.index }}) ? null : {{ forloop.index }}"
                  :class="{ 'active-button': accordionOpen === {{ forloop.index }} }">
            <!-- Plus icon -->
            <svg :class="accordionOpen === {{ forloop.index }} ? 'hide' : 'show' "
              xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
            </svg>
            <!-- Minus icon -->
            <svg :class="accordionOpen === {{ forloop.index }} ? 'show' : 'hide'"
              xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M5 12h14" />
            </svg>

            <span class="accordion-button-text">{{ block.settings.question }}</span>
          </button>

          <div class="answer-content"
              x-ref="content-{{ forloop.index }}"
              x-bind:style="accordionOpen === {{ forloop.index }} ? 'max-height: ' + $refs['content-{{ forloop.index }}'].scrollHeight + 'px' : 'max-height: 0px'"
              :class="{ 'active-answer': accordionOpen === {{ forloop.index }} }">
              {{ block.settings.answer }}
          </div>
        </div>
    {% endfor %}
  </div>
</section>

{% schema %}
  {
    "name": "Accordions",
    "settings": [
      {
        "type": "checkbox",
        "id": "open_default",
        "label": "1st Accordion open by default",
        "default": true
      },
         {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Frequently Asked Questions"
          },
      {
        "type": "select",
        "id": "title_align",
        "label": "Title align",
        "options": [
          {
            "value": "left",
            "label": "Left"
          },
          {
            "value": "center",
            "label": "Center"
          },
          {
            "value": "right",
            "label": "Right"
          }
        ],
        "default": "left"
      },
        {
        "type": "range",
        "id": "title_margin",
        "label": "Title bottom margin",
        "min": 1,
        "max": 10,
        "step": 0.2,
        "default": 2,
        "unit": "rem"
      },
      {
        "type": "range",
        "id": "section_width",
        "label": "Section width desktop",
        "min": 1,
        "max": 100,
        "step": 1,
        "default": 60,
        "unit": "%"
      },
      {
        "type": "color",
        "id": "section_bg",
        "label": "Section bg color",
        "default": "#fff"
      },
      {
        "type": "color",
        "id": "inner_bg",
        "label": "Inner bg color",
        "default": "#fff"
      },
      {
        "type": "color",
        "id": "border_color",
        "label": "Accordion border color",
        "default": "#cacaca"
      },
      {
        "type": "number",
        "id": "border_radius_inner",
        "label": "Inner border radius",
        "default": 6
      },
      {
        "type": "color",
        "id": "text_icon_color",
        "label": "Question text & icon color",
        "default": "#000"
      },
      {
        "type": "color",
        "id": "btn_bg",
        "label": "Active button bg color",
        "default": "#4169e1"
      },
      {
        "type": "color",
        "id": "activebtn_fontcolor",
        "label": "Active question text color",
        "default": "#fff"
      },
       {
        "type": "color",
        "id": "answer_bg",
        "label": "Active answer bg color",
        "default": "#FFE4C4"
      },
      {
        "type": "color",
        "id": "answer_text",
        "label": "Active answer text color",
        "default": "#333"
      },
      {
        "type": "range",
        "id": "title_size",
        "label": "Title font size",
        "min": 1,
        "max": 5,
        "step": 0.2,
        "default": 3,
        "unit": "rem"
      },
       {
        "type": "range",
        "id": "title_size_mb",
        "label": "Title font size mobile",
        "min": 1,
        "max": 5,
        "step": 0.2,
        "default": 2.2,
        "unit": "rem"
      },
       {
        "type": "range",
        "id": "question_size",
        "label": "Question font size",
        "min": 1,
        "max": 5,
        "step": 0.2,
        "default": 2,
        "unit": "rem"
      },
      {
        "type": "range",
        "id": "question_size_mb",
        "label": "Question font size mobile",
        "min": 1,
        "max": 5,
        "step": 0.2,
        "default": 1.8,
        "unit": "rem"
      },
      {
        "type": "range",
        "id": "answer_size",
        "label": "Answer font size",
        "min": 1,
        "max": 5,
        "step": 0.2,
        "default": 1.8,
        "unit": "rem"
      },
      {
        "type": "range",
        "id": "answer_size_mb",
        "label": "Answer font size mobile",
        "min": 1,
        "max": 5,
        "step": 0.2,
        "default": 1.6,
        "unit": "rem"
      },
      {
        "type": "range",
        "id": "icon_size",
        "label": "Icon size",
        "min": 1,
        "max": 5,
        "step": 0.2,
        "default": 1.6,
        "unit": "rem"
      },
      {
        "type": "range",
        "id": "icon_size_mb",
        "label": "Icon size mobile",
        "min": 1,
        "max": 5,
        "step": 0.2,
        "default": 1.4,
        "unit": "rem"
      },
      {
        "type": "range",
        "id": "icon_width",
        "label": "Icon stroke width",
        "min": 1,
        "max": 5,
        "step": 0.1,
        "default": 1.5,
        "unit": "px"
      },
      {
        "type": "range",
        "id": "icon_width_mb",
        "label": "Icon stroke width mobile",
        "min": 1,
        "max": 5,
        "step": 0.1,
        "default": 1.5,
        "unit": "px"
      },
      {
        "type": "font_picker",
        "id": "tfont",
        "label": "Title font",
        "default": "helvetica_n4"
      },
      {
        "type": "font_picker",
        "id": "qfont",
        "label": "Question font",
        "default": "helvetica_n4"
      },
      {
        "type": "font_picker",
        "id": "afont",
        "label": "Answer font",
        "default": "helvetica_n4"
      },
      {
        "type": "range",
        "id": "padding_top",
        "label": "Padding top",
        "min": 0,
        "max": 100,
        "step": 1,
        "default": 50,
        "unit": "px"
      },
       {
        "type": "range",
        "id": "padding_bottom",
        "label": "Padding bottom",
        "min": 0,
        "max": 100,
        "step": 1,
        "default": 50,
        "unit": "px"
      }

    ],
    "blocks": [
      {
        "name": "Accordion Item",
        "type": "accordions",
        "settings": [
          {
            "type": "text",
            "id": "question",
            "label": "Question",
            "default": "Put your question here?"
          },
         {
            "type": "richtext",
            "id": "answer",
            "label": "Answer",
            "default": "<p>Write your answer here.</p>"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Accordions"
      }
    ]
  }
  {% endschema %}